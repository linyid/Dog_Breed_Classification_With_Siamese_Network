{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import cv2\n","import numpy as np\n","import os\n","from google.colab import drive\n","from sklearn.cluster import KMeans\n","from skimage.feature import local_binary_pattern\n","from scipy.spatial.distance import cdist\n","import shutil"],"metadata":{"id":"2j_2LKgePcpH","executionInfo":{"status":"ok","timestamp":1681054719416,"user_tz":240,"elapsed":4045,"user":{"displayName":"倪仁杰","userId":"15483851114308234270"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","execution_count":2,"metadata":{"id":"V0GbVJfq4U4j","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681054752285,"user_tz":240,"elapsed":18284,"user":{"displayName":"倪仁杰","userId":"15483851114308234270"}},"outputId":"6e84d334-f222-4e61-9992-531ba616e684"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"]},{"cell_type":"code","source":["# make working directory to the project folder\n","%cd /content/drive/MyDrive/CS679_Project_nrj/  "],"metadata":{"id":"fTdSm-3WPXeM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681054762292,"user_tz":240,"elapsed":2,"user":{"displayName":"倪仁杰","userId":"15483851114308234270"}},"outputId":"7e91768b-e938-43d5-dfa5-0eeb8f499231"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/CS679_Project_nrj\n"]}]},{"cell_type":"code","source":["# Define LBP\n","def lbp(image, num_points=8, radius=1):\n","    lbp_image = local_binary_pattern(image, num_points, radius, method='uniform')\n","    hist, _ = np.histogram(lbp_image, bins=np.arange(num_points + 3), range=(0, num_points + 2), density=True)\n","    return hist\n","\n","# Load dataset\n","root_folder = \"./train_5\"\n","# root_folder = \"./cropped/train\"\n","breeds = sorted(os.listdir(root_folder))\n","dataset = []\n","\n","for breed in breeds:\n","    breed_folder = os.path.join(root_folder, breed)\n","    images = os.listdir(breed_folder)\n","\n","    for image_name in images:\n","        image_path = os.path.join(breed_folder, image_name)\n","        image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)\n","        feature_vector = lbp(image)\n","        dataset.append((feature_vector, breed, image_name))\n","\n","# Compute 3 centroids for each breed using K-means clustering\n","n_clusters = 3\n","centroids = {}\n","\n","for breed in breeds:\n","    breed_vectors = [vec for vec, label, _ in dataset if label == breed]\n","    kmeans = KMeans(n_clusters=n_clusters, n_init=10, random_state=0).fit(breed_vectors)\n","    centroids[breed] = kmeans.cluster_centers_\n","\n"],"metadata":{"id":"fFIXA-xdOv5R","executionInfo":{"status":"ok","timestamp":1681054815552,"user_tz":240,"elapsed":8958,"user":{"displayName":"倪仁杰","userId":"15483851114308234270"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Find closest images to centroids for each breed\n","closest_image_files = {breed: [[] for _ in range(n_clusters)] for breed in breeds}\n","\n","for breed in breeds:\n","    breed_data = [(image_name, vec) for vec, breed_label, image_name in dataset if breed_label == breed]\n","    breed_centroids = centroids[breed]\n","    distances = cdist(breed_centroids, [vec for _, vec in breed_data], metric='euclidean')\n","    min_indices = np.argmin(distances, axis=1)\n","\n","    for cluster_idx, min_idx in enumerate(min_indices):\n","        closest_image_file = breed_data[min_idx][0]\n","        closest_image_files[breed][cluster_idx] = closest_image_file\n","\n","# Create a new folder in Google Drive to store the closest images\n","output_folder = \"./prototypes\"\n","if not os.path.exists(output_folder):\n","    os.makedirs(output_folder)\n","\n","# Save images closest to centroids in the output_folder\n","for breed in breeds:\n","    for i, closest_image_file in enumerate(closest_image_files[breed]):\n","        input_image_path = os.path.join(root_folder, breed, closest_image_file)\n","        output_image_name = f\"{breed}_centroid_{i}_{closest_image_file}\"\n","        output_image_path = os.path.join(output_folder, output_image_name)\n","        shutil.copyfile(input_image_path, output_image_path)"],"metadata":{"id":"H5I9N6aur20h","executionInfo":{"status":"ok","timestamp":1681054849014,"user_tz":240,"elapsed":652,"user":{"displayName":"倪仁杰","userId":"15483851114308234270"}}},"execution_count":8,"outputs":[]}]}